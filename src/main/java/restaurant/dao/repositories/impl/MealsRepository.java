package restaurant.dao.repositories.impl;

import restaurant.dao.mappers.IMapper;
import restaurant.dao.repositories.IMenuRepository;
import restaurant.dao.uow.IUnitOfWork;
import restaurant.domain.Menu;
import restaurant.dao.repositories.IMealsRepository;
import restaurant.domain.Meals;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.List;

public class MealsRepository extends RepositoryBase<Meals> implements IMealsRepository {

    public MealsRepository(Connection connection, IMapper<Meals> mapper, IUnitOfWork uow) throws SQLException {
        super(connection, mapper, uow);
    }
    @Override
    protected String createTableSql() {
        return "CREATE TABLE IF NOT EXISTS meals("
                + "id bigint GENERATED BY DEFAULT AS IDENTITY,"
                + "menuId bigint,"
                + "name VARCHAR(64),"
                + "description VARCHAR(90),"
                + "price INTEGER,"
                + ")";
    }

    @Override
    protected String getTableName() {
        return "meals";
    }

    @Override
    protected String getUpdateSql() {
        return "UPDATE meals SET (menuId, name, description, price)=(?,?,?,?) WHERE id=?";
    }

    @Override
    protected String getInsertSql() {
        return "INSERT INTO meals (menuId, name, description, price) VALUES(?,?,?,?)";
    }

    @Override
    protected void setInsert(Meals meals) throws SQLException {
        insert.setInt(1, meals.getMenuId());
        insert.setString(2, meals.getName());
        insert.setString(3, meals.getDescription());
        insert.setInt(4, meals.getPrice());
    }

    @Override
    protected void setUpdate(Meals meals) throws SQLException {
        update.setInt(1, meals.getMenuId());
        update.setString(2, meals.getName());
        update.setString(3, meals.getDescription());
        update.setInt(4, meals.getPrice());
    }

}